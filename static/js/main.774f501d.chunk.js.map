{"version":3,"sources":["components/PlayerSelection.tsx","components/PlayerViewer.tsx","components/SearchBox.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["i","PlayerSelection","setPlayerOne","setPlayerTwo","Button","onClick","PLAYERS","PlayerViewer","firstPlayer","secondPlayer","Col","Table","striped","bordered","hover","Name","PTS","AST","TRB","SearchBox","useState","SearchTextA","setSearchTextA","SearchTextB","setSearchTextB","placeholder","type","value","onChange","e","target","p","console","log","toLowerCase","App","activePlayerOne","setActivePlayerOne","activePlayerTwo","setActivePlayerTwo","Container","Row","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.774f501d.chunk.js","sourcesContent":["import { Button, Col, Container, Row, Form } from 'react-bootstrap'\nimport { Player } from '../interfaces/player'\nimport PLAYERS from '../assets/players.json';\nimport { getRandomElement } from '../util/data';\nimport { findRenderedDOMComponentWithTag } from 'react-dom/test-utils';\n\nlet i = 0;\nexport function PlayerSelection({setPlayerOne, setPlayerTwo}: {setPlayerOne: (p: Player)=>void, setPlayerTwo: (p: Player)=>void}): JSX.Element {\n    return(\n    <div>\n    <h1>Select Player</h1>\n    {/*<Form>\n        <Row className=\"mb-3\">\n        <Form.Label>Search a player</Form.Label>\n        <Form.Group as={Col}>\n            <Form.Control placeholder=\"Player 1\"/>\n        </Form.Group>\n        <Form.Group as={Col}>\n            <Form.Control placeholder=\"Player 2\"/>\n        </Form.Group>\n        </Row>\n        <Button variant=\"primary\"> Submit</Button>\n    </Form>\n    <br/>*/}\n            {setPlayerOne /*why is this here*/}\n            Player 1\n            <Button onClick={() =>\n                i>0 ?\n                setPlayerOne(PLAYERS[i--] as Player)\n                :\n                setPlayerOne(PLAYERS[i] as Player)  \n                }> {'<'}--\n            </Button>\n            <Button onClick={() =>\n                i<=502 ?\n                setPlayerOne(PLAYERS[i++] as Player)\n                :\n                setPlayerOne(PLAYERS[i] as Player)\n                }> --{'>'}\n            </Button>\n            Player 2\n            <Button onClick={() =>\n                i>0 ?\n                setPlayerTwo(PLAYERS[i--] as Player)\n                :\n                setPlayerTwo(PLAYERS[i] as Player)  \n                }> {'<'}--\n            </Button>\n            <Button onClick={() =>\n                i<=502 ?\n                setPlayerTwo(PLAYERS[i++] as Player)\n                :\n                setPlayerTwo(PLAYERS[i] as Player)\n                }> --{'>'}\n            </Button>\n            </div>\n    )\n\n}","import { Col, Container, Row, Table } from 'react-bootstrap'\nimport { Player } from '../interfaces/player'\nexport function PlayerViewer({firstPlayer, secondPlayer}: {firstPlayer: Player, secondPlayer:Player}): JSX.Element{\n    return(\n        <Col>\n            <h1>Player Viewer</h1>\n                <Table striped bordered hover>\n                <h4>Per Game Stats</h4>\n                <tr>\n                    <th></th>\n                    <th>Player 1</th>\n                    <th>Player 2</th>\n                </tr>\n                <tr>\n                    <td>Name</td>\n                    <td>{firstPlayer.Name}</td>\n                    <td>{secondPlayer.Name}</td>\n                </tr>\n                <tr>\n                    <td>Points</td>\n                    <td>{firstPlayer.PTS}</td>\n                    <td>{secondPlayer.PTS}</td>\n                </tr>\n                <tr>\n                    <td>Assists</td>\n                    <td>{firstPlayer.AST}</td>\n                    <td>{secondPlayer.AST}</td>\n                </tr>\n                <tr>\n                    <td>Rebounds</td>\n                    <td>{firstPlayer.TRB}</td>\n                    <td>{secondPlayer.TRB}</td>\n                </tr>\n            </Table>\n        </Col>\n    )\n}","import { useState } from \"react\";\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { Player } from \"../interfaces/player\";\nimport PLAYERS from '../assets/players.json';\n\n\nexport function SearchBox({setPlayerOne, setPlayerTwo}: {setPlayerOne: (p: Player)=>void, setPlayerTwo: (p: Player)=>void}):JSX.Element{\n    const [SearchTextA, setSearchTextA]=useState(\"\");\n    const [SearchTextB, setSearchTextB]=useState(\"\");\n    function doSearchA(){\n        console.log(SearchTextA)\n        console.log(PLAYERS[100].Name)\n        for(const p in PLAYERS){\n            if(PLAYERS[p].Name.toLowerCase()==SearchTextA.toLowerCase()){\n                console.log(\"condition is true\")\n                console.log(PLAYERS[p])\n                setPlayerOne(PLAYERS[p] as Player)\n            }\n    }\n}\n    function doSearchB(){\n        console.log(SearchTextB)\n        for(const p in PLAYERS){\n        if(PLAYERS[p].Name.toLowerCase()==SearchTextB.toLowerCase()){\n            console.log(\"condition is true\")\n            console.log(PLAYERS[p])\n            setPlayerTwo(PLAYERS[p] as Player)\n        }\n    }\n}\n\n    return <div>\n        <Col>\n        <input placeholder=\"Select Player 1\"type=\"textbox\" value={SearchTextA} \n                onChange={(e) =>\n                setSearchTextA(e.target.value)\n                }/>\n             <Button onClick={doSearchA}>Submit</Button>\n        </Col>\n        <Col>\n             <input placeholder=\"Select Player 2\"type=\"textbox\" value={SearchTextB} \n                onChange={(e) =>\n                setSearchTextB(e.target.value)\n                }/>\n             <Button onClick={doSearchB}>Submit</Button>\n        </Col>\n    </div>\n    }\n","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport PLAYERS from './assets/players.json';\nimport { PlayerSelection } from './components/PlayerSelection';\nimport { PlayerViewer } from './components/PlayerViewer';\nimport { SearchBox } from './components/SearchBox';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Col, Container, Row } from 'react-bootstrap'\nimport { Player } from './interfaces/player';\n\nfunction App(): JSX.Element {\nconst [activePlayerOne, setActivePlayerOne] = useState<Player>(PLAYERS[0] as Player);\nconst [activePlayerTwo, setActivePlayerTwo] = useState<Player>(PLAYERS[1] as Player);\n\n  return (\n    <Container>\n        <Row>\n          <Col>\n          <PlayerSelection setPlayerOne={setActivePlayerOne} setPlayerTwo={setActivePlayerTwo}></PlayerSelection>\n          <SearchBox setPlayerOne={setActivePlayerOne} setPlayerTwo={setActivePlayerTwo}></SearchBox>\n          </Col>\n          <PlayerViewer firstPlayer={activePlayerOne} secondPlayer={activePlayerTwo}></PlayerViewer>\n        </Row>\n    </Container>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}