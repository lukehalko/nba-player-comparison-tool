{"version":3,"sources":["components/PlayerSelection.tsx","components/PlayerViewer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["i","PlayerSelection","setPlayerOne","setPlayerTwo","Col","Row","md","Button","onClick","PLAYERS","PlayerViewer","firstPlayer","secondPlayer","Table","striped","bordered","hover","Name","PTS","AST","TRB","App","useState","activePlayerOne","setActivePlayerOne","activePlayerTwo","setActivePlayerTwo","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAMIA,EAAI,EACD,SAASC,EAAT,GAAyI,IAA/GC,EAA8G,EAA9GA,aAAcC,EAAgG,EAAhGA,aAC3C,OACA,eAACC,EAAA,EAAD,WACA,+CAcSF,EACL,eAACG,EAAA,EAAD,CAAKC,GAAI,EAAT,qBAEI,eAACC,EAAA,EAAD,CAAQC,QAAS,kBAEbN,EADAF,EAAE,EACWS,EAAQT,KAERS,EAAQT,KAJzB,cAKQ,IALR,QAOA,eAACO,EAAA,EAAD,CAAQC,QAAS,kBAEbN,EADAF,GAAG,IACUS,EAAQT,KAERS,EAAQT,KAJzB,gBAKU,UAGV,eAACK,EAAA,EAAD,CAAKC,GAAI,EAAT,qBAEA,eAACC,EAAA,EAAD,CAAQC,QAAS,kBAEbL,EADAH,EAAE,EACWS,EAAQT,KAERS,EAAQT,KAJzB,cAKQ,IALR,QAOA,eAACO,EAAA,EAAD,CAAQC,QAAS,kBAEbL,EADAH,GAAG,IACUS,EAAQT,KAERS,EAAQT,KAJzB,gBAKU,a,YCtDf,SAASU,EAAT,GAA4G,IAArFC,EAAoF,EAApFA,YAAaC,EAAuE,EAAvEA,aACvC,OACI,eAACR,EAAA,EAAD,WACI,+CACI,eAACS,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACA,gDACA,+BACI,uBACA,0CACA,6CAEJ,+BACI,sCACA,6BAAKL,EAAYM,OACjB,6BAAKL,EAAaK,UAEtB,+BACI,wCACA,6BAAKN,EAAYO,MACjB,6BAAKN,EAAaM,SAEtB,+BACI,yCACA,6BAAKP,EAAYQ,MACjB,6BAAKP,EAAaO,SAEtB,+BACI,0CACA,6BAAKR,EAAYS,MACjB,6BAAKR,EAAaQ,e,kBCLvBC,MAff,WACA,MAA8CC,mBAAiBb,EAAQ,IAAvE,mBAAOc,EAAP,KAAwBC,EAAxB,KACA,EAA8CF,mBAAiBb,EAAQ,IAAvE,mBAAOgB,EAAP,KAAwBC,EAAxB,KAEE,OACE,cAACC,EAAA,EAAD,UACI,eAACtB,EAAA,EAAD,WACE,cAACJ,EAAD,CAAiBC,aAAcsB,EAAoBrB,aAAcuB,IAEjE,cAAChB,EAAD,CAAcC,YAAaY,EAAiBX,aAAca,UCNrDG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.745b91b6.chunk.js","sourcesContent":["import { Button, Col, Container, Row, Form } from 'react-bootstrap'\nimport { Player } from '../interfaces/player'\nimport PLAYERS from '../assets/players.json';\nimport { getRandomElement } from '../util/data';\nimport { findRenderedDOMComponentWithTag } from 'react-dom/test-utils';\n\nlet i = 0;\nexport function PlayerSelection({setPlayerOne, setPlayerTwo}: {setPlayerOne: (p: Player)=>void, setPlayerTwo: (p: Player)=>void}): JSX.Element {\n    return(\n    <Col>\n    <h1>Select Player</h1>\n    {/*<Form>\n        <Row className=\"mb-3\">\n        <Form.Label>Search a player</Form.Label>\n        <Form.Group as={Col}>\n            <Form.Control placeholder=\"Player 1\"/>\n        </Form.Group>\n        <Form.Group as={Col}>\n            <Form.Control placeholder=\"Player 2\"/>\n        </Form.Group>\n        </Row>\n        <Button variant=\"primary\"> Submit</Button>\n    </Form>\n    <br/>*/}\n            {setPlayerOne /*why is this here*/}\n        <Row md={5}>\n            Player 1\n            <Button onClick={() =>\n                i>0 ?\n                setPlayerOne(PLAYERS[i--] as Player)\n                :\n                setPlayerOne(PLAYERS[i] as Player)  \n                }> {'<'}--\n            </Button>\n            <Button onClick={() =>\n                i<=502 ?\n                setPlayerOne(PLAYERS[i++] as Player)\n                :\n                setPlayerOne(PLAYERS[i] as Player)\n                }> --{'>'}\n            </Button>\n        </Row>\n            <Row md={5}>\n            Player 2\n            <Button onClick={() =>\n                i>0 ?\n                setPlayerTwo(PLAYERS[i--] as Player)\n                :\n                setPlayerTwo(PLAYERS[i] as Player)  \n                }> {'<'}--\n            </Button>\n            <Button onClick={() =>\n                i<=502 ?\n                setPlayerTwo(PLAYERS[i++] as Player)\n                :\n                setPlayerTwo(PLAYERS[i] as Player)\n                }> --{'>'}\n            </Button>\n        </Row>\n    </Col>\n    )\n}","import { Col, Container, Row, Table } from 'react-bootstrap'\nimport { Player } from '../interfaces/player'\nexport function PlayerViewer({firstPlayer, secondPlayer}: {firstPlayer: Player, secondPlayer:Player}): JSX.Element{\n    return(\n        <Col>\n            <h1>Player Viewer</h1>\n                <Table striped bordered hover>\n                <h4>Per Game Stats</h4>\n                <tr>\n                    <th></th>\n                    <th>Player 1</th>\n                    <th>Player 2</th>\n                </tr>\n                <tr>\n                    <td>Name</td>\n                    <td>{firstPlayer.Name}</td>\n                    <td>{secondPlayer.Name}</td>\n                </tr>\n                <tr>\n                    <td>Points</td>\n                    <td>{firstPlayer.PTS}</td>\n                    <td>{secondPlayer.PTS}</td>\n                </tr>\n                <tr>\n                    <td>Assists</td>\n                    <td>{firstPlayer.AST}</td>\n                    <td>{secondPlayer.AST}</td>\n                </tr>\n                <tr>\n                    <td>Rebounds</td>\n                    <td>{firstPlayer.TRB}</td>\n                    <td>{secondPlayer.TRB}</td>\n                </tr>\n            </Table>\n        </Col>\n    )\n}","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport PLAYERS from './assets/players.json';\nimport { PlayerSelection } from './components/PlayerSelection';\nimport { PlayerViewer } from './components/PlayerViewer';\nimport { SearchBox } from './components/SearchBox';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Col, Container, Row } from 'react-bootstrap'\nimport { Player } from './interfaces/player';\n\nfunction App(): JSX.Element {\nconst [activePlayerOne, setActivePlayerOne] = useState<Player>(PLAYERS[0] as Player);\nconst [activePlayerTwo, setActivePlayerTwo] = useState<Player>(PLAYERS[1] as Player);\n\n  return (\n    <Container>\n        <Row>\n          <PlayerSelection setPlayerOne={setActivePlayerOne} setPlayerTwo={setActivePlayerTwo}></PlayerSelection>\n          {/*SearchBox></SearchBox>*/}\n          <PlayerViewer firstPlayer={activePlayerOne} secondPlayer={activePlayerTwo}></PlayerViewer>\n        </Row>\n    </Container>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}